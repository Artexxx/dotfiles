# vim:fileencoding=utf-8:foldmethod=marker:foldlevel=0

#: kitty has very powerful font management. You can configure
#: individual font faces and even specify special fonts for particular
#: characters.
# Offcial Reference: https://sw.kovidgoyal.net/kitty/conf/

#: Fonts {{{
# bold_font        auto
# italic_font      auto
# bold_italic_font auto
# font_family     IosevkaTerm Nerd Font

font_family        FiraCode Nerd Font
font_size          12.0
bold_font          FiraCode Nerd Font Bold
italic_font        FiraCode Nerd Font Italic
bold_italic_font   FiraCode Nerd Font Bold Italic

#: You can specify different fonts for the bold/italic/bold-italic
#: variants. To get a full list of supported fonts use the `kitty
#: +list-fonts` command. By default they are derived automatically, by
#: the OSes font system. When bold_font or bold_italic_font is set to
#: auto on macOS, the priority of bold fonts is semi-bold, bold,
#: heavy. Setting them manually is useful for font families that have
#: many weight variants like Book, Medium, Thick, etc. For example::

#:     font_family      Operator Mono Book
#:     bold_font        Operator Mono Medium
#:     italic_font      Operator Mono Book Italic
#:     bold_italic_font Operator Mono Medium Italic



# TODO:
# disable_ligatures always
# disable_ligatures never
disable_ligatures cursor
enable_ligatures   yes
modify_font underline_position 150%

#: }}}


#: Session {{{

allow_remote_control yes

#: }}}


#: Cursor customization {{{

cursor_shape block
cursor_beam_thickness 1.5
cursor_underline_thickness 2.0

cursor_blink_interval 0
cursor_stop_blinking_after 15.0

#: }}}

#: Scrollback {{{

scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS -M -i -j5 +INPUT_LINE_NUMBER

#: }}}

#: Mouse {{{

url_style curly

#: }}}

#: Window layout {{{

# TODO
remember_window_size    yes
initial_window_width    1250
initial_window_height   900
enabled_layouts         splits,stack
hide_window_decorations no
draw_minimal_borders    yes


#: }}}

#: Tab bar {{{
#
tab_bar_style                   custom
tab_separator                   ""
tab_fade                        0 0 0 0

tab_title_template              " {index}:{' []' if layout_name == 'stack' else ''} {title.split(' - ', 1)[-1]} "
active_tab_title_template       " {index}:{' []' if layout_name == 'stack' else ''} {title.split(' - ', 1)[-1]} "

tab_bar_edge                    top
tab_bar_align                   left
tab_bar_margin_width            15.0
tab_bar_margin_height           10.0 0.0
active_tab_font_style           normal
inactive_tab_font_style         normal
tab_activity_symbol             " "
tab_bar_min_tabs                2
tab_activity_symbol             none
bell_on_tab                     no
#: }}}

#: Color scheme {{{

# include                    themes/nightfox.conf
include                    themes/tokyonight_night.conf
background_opacity         0.90
dynamic_background_opacity yes

#: }}}

#: OS specific tweaks {{{

macos_option_as_alt        right
macos_show_window_title_in window

#: }}}

#: Keyboard shortcuts {{{
# NOTE:
# - kitty_mod is used for the features that are used frequently or requires
# continous keystokes
# - ctrl+m acts as a leader key for other features

kitty_mod ctrl+shift
# clear_all_shortcuts yes

#: Clipboard {{{

map cmd+c  copy_to_clipboard
map cmd+v  paste_from_clipboard
# map ctrl+c copy_to_clipboard
# map ctrl+v paste_from_clipboard
map cmd+v  paste_from_clipboard
#: }}}

#: Scrolling {{{

map kitty_mod+b    scroll_page_up
map kitty_mod+f    scroll_page_down
map ctrl+m>g       scroll_home
map ctrl+m>shift+g scroll_end

# Scroll to the previous/next shell prompt
map kitty_mod+z scroll_to_prompt -1
map kitty_mod+x scroll_to_prompt 1

# Browse scrollback buffer in pager
map ctrl+m>shift+p show_scrollback

# Browse output of the last shell command in pager
map ctrl+m>p show_last_command_output

#: }}}

#: Window management {{{

map cmd+n new_os_window

# Create a new window
map kitty_mod+enter launch --location=split --cwd=current

map kitty_mod+w close_window
map ctrl+m>w>o  close_other_windows_in_tab

map kitty_mod+- launch --location=hsplit --cwd=current
map kitty_mod+\ launch --location=vsplit --cwd=current

# Switch focus to the neighboring window in the indicated direction
map kitty_mod+k neighboring_window up
map kitty_mod+j neighboring_window down
map kitty_mod+h neighboring_window left
map kitty_mod+l neighboring_window right

# Focus the previously active window
map ctrl+m>w>p nth_window -1

# Resize window
map ctrl+m>r        start_resizing_window
map ctrl+m>0        reset_window_sizes
map kitty_mod+left  resize_window narrower 2
map kitty_mod+right resize_window wider    2
map kitty_mod+up    resize_window taller   2
map kitty_mod+down  resize_window shorter  3

# Visually select and focus window
map ctrl+9 focus_visible_window

# Visually swap window with another
map ctrl+0 swap_with_window

# Rotate the current split, changing its split axis from vertical to
# horizontal or vice versa
map f7 layout_action rotate

# Move the active window in the indicated direction
map cmd+ctrl+up    move_window up
map cmd+ctrl+left  move_window left
map cmd+ctrl+right move_window right
map cmd+ctrl+down  move_window down

# Move the active window to the indicated screen edge
map cmd+ctrl+shift+up    layout_action move_to_screen_edge top
map cmd+ctrl+shift+left  layout_action move_to_screen_edge left
map cmd+ctrl+shift+right layout_action move_to_screen_edge right
map cmd+ctrl+shift+down  layout_action move_to_screen_edge bottom

#: }}}

#: Tab management {{{

map ctrl+alt+t   launch --type=tab --cwd=current
map ctrl+shift+T new_tab
map cmd+w        close_tab
map ctrl+m>t>o   close_other_tabs_in_os_window

map kitty_mod+] next_tab
map kitty_mod+[ previous_tab

map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9

map kitty_mod+. move_tab_forward
map kitty_mod+, move_tab_backward

map ctrl+m>t>t set_tab_title

#: }}}

#: Font sizes {{{

map cmd+equal change_font_size all +2.0
map cmd+minus change_font_size all -2.0
map cmd+0     change_font_size all 0

#: }}}

#: Kitten hints {{{

# Open URL
map ctrl+m>u open_url_with_hints

# Select a path/filename and insert it into the terminal
map ctrl+m>i kitten hints --type path --program -

# Open selected path/filename with the default program
map ctrl+m>o kitten hints --type path

# Insert selected hash
map ctrl+m>h kitten hints --type hash --program -

# Select a hyperlink (e.g., with ls --hyperlink=auto, we can open an item via
# the defined application)
map ctrl+m>l kitten hints --type hyperlink

#: }}}

#: Miscellaneous {{{

map kitty_mod+m toggle_maximized
map cmd+q quit
map cmd+m minimize_macos_window
map cmd+h hide_macos_app
map opt+cmd+h hide_macos_other_apps

# Edit and reload kitty.conf
map cmd+, edit_config_file
map ctrl+cmd+, load_config_file

# Unicode input
map ctrl+cmd+space kitten unicode_input

# Make these combinations work
map shift+enter send_text all \x1b[13;2u
map ctrl+enter send_text all \x1b[13;5u
# map ctrl+1 send_text all \x1b[27;5;49~
# map ctrl+2 send_text all \x1b[27;5;50~
# map ctrl+3 send_text all \x1b[27;5;51~
# map ctrl+4 send_text all \x1b[27;5;52~
# map ctrl+5 send_text all \x1b[27;5;53~
# map ctrl+6 send_text all \x1b[27;5;54~
# map ctrl+7 send_text all \x1b[27;5;55~
# map ctrl+8 send_text all \x1b[27;5;56~
# map ctrl+9 send_text all \x1b[27;5;57~
# map ctrl+0 send_text all \x1b[27;5;58~

#: }}}

#: }}}

